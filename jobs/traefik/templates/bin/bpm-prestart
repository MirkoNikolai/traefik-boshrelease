#!/usr/bin/env bash
<%
    require "shellwords"
    def esc(x)
        Shellwords.shellescape(x)
    end
-%>

set -eo pipefail

function prepend_datetime() {
    awk -W interactive '{ system("echo -n [$(date +%FT%T%z)]"); print " " $0 }'
}

exec \
    3>&1 \
    4>&2 \
    1> >(prepend_datetime >&3) \
    2> >(prepend_datetime >&4)

readonly JOB_NAME=traefik
readonly \
    LOG_DIR=/var/vcap/sys/log/${JOB_NAME} \
    JOB_DIR=/var/vcap/jobs/${JOB_NAME} \
    PKG_DIR=/var/vcap/packages/${JOB_NAME} \
    STORE_DIR=/var/vcap/store/${JOB_NAME}



# Persistent storage init
mkdir -p "${STORE_DIR}/acme"
chown vcap:vcap "${STORE_DIR}/acme"
chmod 700 "${STORE_DIR}/acme"
acme_storage_file=<%= esc("/var/vcap/store/traefik/acme/acme#{p('traefik.acme.staging') ? '-staging' : ''}-data.json") %>
if [[ ! -f ${acme_storage_file} ]]; then
    echo '{}' > "${acme_storage_file}"
    chown vcap:vcap "${acme_storage_file}"
    chmod 600 "${acme_storage_file}"
fi



# Migrate existing logs to BPM
touch \
    "${LOG_DIR}/traefik.log" \
    "${LOG_DIR}/access.log"
chown vcap:vcap \
    "${LOG_DIR}/traefik.log" \
    "${LOG_DIR}/access.log"

# Migrate persistent data to BPM
if [[ -f "${STORE_DIR}/acme/acme-staging-data.json" ]]; then
    chown vcap:vcap "${STORE_DIR}/acme/acme-staging-data.json"
fi
if [[ -f "${STORE_DIR}/acme/acme-data.json" ]]; then
    chown vcap:vcap "${STORE_DIR}/acme/acme-data.json"
fi



<%
    if p('traefik.consul.enabled')
        # NOTE: here we choose to always render the code for uploading Traefik
        # configuration to the Consul Key-Value store, instead of only
        # rendering it on the bootstrap node.
        #
        # We do this because we think it is easier to debug.
        #
        # Plus, always providing such code allows operators to manually upload
        # such configuration whenever the bootstrap node would be destroyed in
        # a disaster scenario. In such situation, changing the Bash variables
        # below and manually run this script on some other node could be of
        # help.
-%>
is_bootstrap_node=<%= esc(spec.bootstrap) %>
if [[ ${is_bootstrap_node} == "true" ]]; then
    # Upload the static Traefik configuration into the Key-value store.
    "${PKG_DIR}/bin/traefik" storeconfig \
        --configfile="${JOB_DIR}/conf/traefik.toml"
fi
<%  end -%>
