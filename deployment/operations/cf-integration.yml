---

- path: /instance_groups/name=traefik/jobs/name=traefik/properties/traefik?/accept_invalid_backend_certificates
  type: replace
  value: true

- path: /instance_groups/name=traefik/jobs/name=traefik/properties/traefik/file?
  type: replace
  value:
    enabled: true
    rules: |
      [backends]
        [backends.traefik-ui]
          [backends.traefik-ui.servers.server1]
          url = "https://127.0.0.1:8443"

        [backends.cf-http-backend]
          [backends.cf-http-backend.servers.router0-http]
          url = "http://10.244.0.34:80"

        [backends.cf-tls-backend]
          [backends.cf-tls-backend.servers.router0-tls]
          url = "https://10.244.0.34:443"

      [frontends]
        [frontends.traefik-ui]
          entrypoints = [ "https" ]
          priority = 20
          backend = "traefik-ui"
          passHostHeader = true

          [frontends.traefik-ui.routes]
            [frontends.traefik-ui.routes.route1]
              rule = "Host: ((web_backend_hostname))"

        [frontends.cf-http-frontend]
          entrypoints = [ "http" ]
          priority = 10
          backend = "cf-http-backend"
          passHostHeader = true

          [frontends.cf-http-frontend.routes]
            [frontends.cf-http-frontend.routes.catch-all-http]
              # Workaround for a catch-all rule:
              rule = "HostRegexp: {dummy:[-.[:alnum:]_]+}"

        [frontends.cf-tls-frontend]
          entrypoints = [ "https" ]
          priority = 10
          backend = "cf-tls-backend"
          passHostHeader = true

          [frontends.cf-tls-frontend.routes]
            [frontends.cf-tls-frontend.routes.catch-all-tls]
              # Workaround for a catch-all rule:
              rule = "HostRegexp: {dummy:[-.[:alnum:]_]+}"
    watch: true

- path: /instance_groups/name=traefik/vm_extensions?/-
  type: replace
  value: traefik-loadbalancer
